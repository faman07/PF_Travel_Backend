// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model familyPackage {
  id        String            @id @default(uuid())
  billingId String            @default(uuid())
  package   String            @default(uuid())
  cost      Decimal           @db.Money()
  tPackage  touristPackage[]                            // relation one-to-many with touristPackage
}

model touristPackage {
  id                  String          @id @default(uuid())
  cost                Decimal         @db.Money()
  familyP             familyPackage   @relation(fields:[familyPId], references: [id])  
  familyPId           String
  customer            customer        @relation(fields:[customerId] , references: [id])
  customerId          String
  ticket              ticket          @relation(fields: [ticketId], references: [id])
  ticketId            String
  //accommodation       accommodation   @relation(fields: [accommodationId] , references: [id])
  //accommodationId     String
  excursions          excursionsOnTouristPackage[] 
}

model customer {
  id                  String              @id @default(uuid())
  name                String  
  identification      String    
  birthday            String 
  phoneNumber         String  
  email               String              @unique
  numberCard          String              @unique 
  tPackage            touristPackage[] 
}

model ticket {
  id                  String              @id @default(uuid())
  fligthId            String?
  class               String  
  chair               String  
  cost                Decimal             @db.Money()
  tPackage            touristPackage[]
  company             company             @relation(fields: [companyId], references: [id])
  companyId           String
}

model accommodation {
  id              String            @id @default(uuid())
  //hotelId         Int?
  location        String  
  description     String            @db.Text  
  class           Int
  cost            Decimal           @db.Money()
  services        Int
  //tPackage        touristPackage[]
  //hotel           hotel             @relation(fields:[hotelId], references: [id])
  hotelId         String
}

model excursion {
  id              String            @id @default(uuid())
  name            String?
  address         String  
  startDate       String 
  endDate         String
  type            String
  cost            Decimal           @db.Money() 
  tPackages       excursionsOnTouristPackage[] 
}

model excursionsOnTouristPackage {
  excursion       excursion           @relation(fields: [excursionId], references: [id])
  excursionId     String
  tPackage        touristPackage      @relation(fields: [tPackageId], references: [id])
  tPackageId      String

  @@id([excursionId, tPackageId])
}

model company {
  id              String    @id @default(uuid())
  name            String?
  contact         String   
  ticket          ticket[]
}

model hotel {
  id              String    @id @default(uuid())
  name            String
  phoneNumber     String  
  address         String  
  cityCountry     String
  email           String    //@unique
  description     String    //@db.Text
  image           String    //@db.Text
  services        Int?
  //accommodation   accommodation[]
}

model services {
  id              Int       @id @default(autoincrement())
  service         String
}

model service {
  id              Int       @id @default(autoincrement())
  services        Int
  cost            Decimal   @db.Money()  
}

model type {
  id              Int       @id @default(autoincrement())
  name            String
  detail          String    @db.Text  
}